{"version":3,"sources":["components/Timer.jsx","components/TimesTable.jsx","components/Scrambler.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Timer","updateTimesArray","inspection","Boolean","inspectionDuration","useState","display","setDisplay","startTime","isTiming","useRef","isInspection","elapsedTime","timeInterval","inspectionTimeInterval","useEffect","document","addEventListener","startAndStopTimerWithSpaceBar","removeEventListener","e","key","current","inspectionTime","newStartTime","Date","now","setInterval","clearInterval","start","timeToString","stop","console","log","time","diffInHr","diffInMin","Math","floor","toString","padStart","mm","diffInSec","ss","diffInMs","ms","className","TimesTable","timesArray","Array","removeTime","Function","clearAllTimes","timesArrayAverage","length","avg","i","bestTime","min","worstTime","max","times","map","onClick","Scrambler","face","movesArray","scramble","dir","faces","random","f","App","setTimesArray","setInspection","setInspectionDuration","returnDataObjectIfExistsOrCreateDataObjectIfNot","window","localStorage","getItem","setItem","JSON","stringify","parse","string","timesArrayCopy","slice","push","addNewTimeToTimesArray","indexToRemove","indexOf","splice","removeTimeFromTimeArray","htmlFor","type","name","defaultChecked","value","onChange","event","target","placeholder","disabled","href","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c29b38f.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react'\r\n\r\nconst Timer = ({updateTimesArray, inspection = Boolean, inspectionDuration}) => {\r\n\r\n  const [display, setDisplay] = useState('00:00.00')\r\n\r\n  var startTime = 0;\r\n\r\n  var isTiming = useRef(false);\r\n  var isInspection = useRef(false);\r\n  var elapsedTime = useRef(0);\r\n  var timeInterval = useRef(0);\r\n  var inspectionTimeInterval = useRef(0);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keyup', startAndStopTimerWithSpaceBar);\r\n\r\n    return () => {\r\n      document.removeEventListener('keyup', startAndStopTimerWithSpaceBar);\r\n    }\r\n  })\r\n\r\n  const startAndStopTimerWithSpaceBar = (e) => {\r\n    if(inspection) {\r\n      \r\n      if(e.key === ' ') {\r\n        if(isTiming.current === false) {\r\n          if(isInspection.current === false) {\r\n            isInspection.current = true\r\n            var inspectionTime = (inspectionDuration*1000);\r\n            var newStartTime = Date.now();\r\n            inspectionTimeInterval.current = setInterval(() => {\r\n              inspectionTime -= (Date.now() - newStartTime);\r\n              if(inspectionTime <= 0) {\r\n                clearInterval(inspectionTimeInterval.current);\r\n                isTiming.current = true;\r\n                start();\r\n              } else {\r\n                newStartTime = Date.now();\r\n                setDisplay(timeToString(inspectionTime));\r\n              }\r\n            }, 5);\r\n          } else if(isInspection.current === true) {\r\n            isInspection.current = false\r\n            clearInterval(inspectionTimeInterval.current);\r\n            setDisplay('00:00.00');\r\n          }\r\n        } else if(isTiming.current === true) {\r\n          isTiming.current = false;\r\n          isInspection.current = false\r\n          stop();\r\n        }\r\n      }\r\n\r\n    } else {\r\n      if(e.key === ' ') {\r\n        if(isTiming.current === false) {\r\n          isTiming.current = true;\r\n          start();\r\n        } else if(isTiming.current === true) {\r\n          isTiming.current = false;\r\n          stop();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const start = () => {\r\n    console.log('start');\r\n    startTime = Date.now();\r\n    timeInterval.current = setInterval(() => {\r\n      elapsedTime.current = Date.now() - startTime;\r\n      setDisplay(timeToString(elapsedTime.current));\r\n    }, 5);\r\n  }\r\n\r\n  const stop = () => {\r\n    console.log('stop');\r\n    clearInterval(timeInterval.current);\r\n    updateTimesArray(elapsedTime.current);\r\n    elapsedTime.current = 0;\r\n  }\r\n\r\n  const timeToString = (time) => {\r\n    var diffInHr = time / 3600000;\r\n    var hh = Math.floor(diffInHr).toString().padStart(2, \"0\");\r\n    var diffInMin = (diffInHr - hh) * 60;\r\n    var mm = Math.floor(diffInMin).toString().padStart(2, \"0\");\r\n    var diffInSec = (diffInMin - mm) * 60;\r\n    var ss = Math.floor(diffInSec).toString().padStart(2, \"0\");\r\n    var diffInMs = (diffInSec - ss) * 100;\r\n    var ms = Math.floor(diffInMs).toString().padStart(2, \"0\");\r\n    return `${mm}:${ss}.${ms}`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='timer' >\r\n        {display}\r\n      </div>\r\n      <p>Press the <em>spacebar</em> to start/stop the timer.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","\r\nconst TimesTable = ({timesArray = Array, removeTime = Function, clearAllTimes = Function}) => {\r\n\r\n  const timeToString = (time) => {\r\n    var diffInHr = time / 3600000;\r\n    var hh = Math.floor(diffInHr).toString().padStart(2, \"0\");\r\n    var diffInMin = (diffInHr - hh) * 60;\r\n    var mm = Math.floor(diffInMin).toString().padStart(2, \"0\");\r\n    var diffInSec = (diffInMin - mm) * 60;\r\n    var ss = Math.floor(diffInSec).toString().padStart(2, \"0\");\r\n    var diffInMs = (diffInSec - ss) * 100;\r\n    var ms = Math.floor(diffInMs).toString().padStart(2, \"0\");\r\n    return `${mm}:${ss}.${ms}`;\r\n  }\r\n\r\n  const timesArrayAverage = () => {\r\n    if(timesArray.length === 0) return;\r\n\r\n    var avg = 0;\r\n    for(var i = 0; i < timesArray.length; i++) {\r\n      avg+= timesArray[i];\r\n    }\r\n    return timeToString(avg/timesArray.length);\r\n  }\r\n\r\n  const bestTime = () => {\r\n    if(timesArray.length === 0) return;\r\n    return timeToString(Math.min(...timesArray));\r\n  }\r\n\r\n  const worstTime = () => {\r\n    if(timesArray.length === 0) return;\r\n    return timeToString(Math.max(...timesArray));\r\n  }\r\n\r\n  var times = timesArray.map((time, i) => \r\n\r\n    <div\r\n      className={\r\n        timeToString(time) === bestTime() ? \r\n          'times bestTime' : \r\n        timeToString(time) === worstTime() ? \r\n          'times worstTime' : \r\n        'times'\r\n      }\r\n      key={i}\r\n    >\r\n      {i+1}: {timeToString(time)}\r\n      <button className='deleteButton' onClick={() => removeTime(time)} >X</button>\r\n    </div>\r\n\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <button \r\n        className='clearAll'\r\n        onClick={() => clearAllTimes()} \r\n      >\r\n        Clear All Times\r\n      </button>\r\n\r\n      <div className='timesTable' >\r\n        {times}\r\n      </div>\r\n\r\n      <div className=\"stats\">\r\n        <div>Avg: {timesArrayAverage() ? timesArrayAverage() : '00:00.00'}</div>\r\n        <div className='bestTime' >Best: {bestTime() ? bestTime() : '00:00.00'}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimesTable\r\n","\r\nconst Scrambler = () => {\r\n\r\n  const scramble = () => {\r\n    var turns = 25;\r\n    var movesArray = ['R', 'L', 'U', 'D', 'B', 'F'];\r\n    var scramble = '';\r\n    var dir = '';\r\n    var rand, face;\r\n\r\n    //below here is pretty much used code from http://www.cubetimer.com/\r\n\r\n    var faces = {\r\n      'R' : { 'allowed' : true, 'enables' : ['U', 'D', 'F', 'B'] },\r\n      'L' : { 'allowed' : true, 'enables' : ['U', 'D', 'F', 'B'] },\r\n      'U' : { 'allowed' : true, 'enables' : ['R', 'L', 'F', 'B'] },\r\n      'D' : { 'allowed' : true, 'enables' : ['R', 'L', 'F', 'B'] },\r\n      'F' : { 'allowed' : true, 'enables' : ['R', 'L', 'U', 'D'] },\r\n      'B' : { 'allowed' : true, 'enables' : ['R', 'L', 'U', 'D'] }\r\n    };\r\n\r\n    for(var i = 0; i < turns; i++) {\r\n      do {\r\n        rand = Math.floor(Math.random() * (movesArray.length));\r\n        face = movesArray[rand];\r\n      } while(! faces[face]['allowed'])\r\n\r\n      faces[face]['allowed'] = false;\r\n\r\n      for(var f = 0; f < faces[face]['enables'].length; f++) {\r\n        faces[faces[face]['enables'][f]]['allowed'] = true;\r\n      }\r\n\r\n      switch(Math.floor(Math.random() * 3)) {\r\n        case 0: dir = \"\";  break;\r\n        case 1: dir = \"'\"; break;\r\n        case 2: dir = \"2\"; break;\r\n        default: break;\r\n      }\r\n\r\n      scramble += ` ${face}${dir}`;\r\n    }\r\n\r\n    return scramble;\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='scramble' >\r\n      Scramble: {scramble()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scrambler\r\n","import './App.css';\nimport { useState, useEffect } from 'react'\nimport Timer from './components/Timer';\nimport TimesTable from './components/TimesTable';\nimport Scrambler from './components/Scrambler';\n\nfunction App() {\n\n  //STATES\n  const [timesArray, setTimesArray] = useState([]);\n  const [inspection, setInspection] = useState(false);\n  const [inspectionDuration, setInspectionDuration] = useState(0);\n\n  //FUNCTIONS\n  const makeNewlocalStorageObject = () => {\n    var Data = []\n    return JSON.stringify(Data);\n  };\n\n  const returnDataObjectIfExistsOrCreateDataObjectIfNot = () => {\n    if(window.localStorage.getItem('user-solve-times') === null) {\n      window.localStorage.setItem('user-solve-times', makeNewlocalStorageObject());\n    } else {\n      return JSON.parse(window.localStorage.getItem('user-solve-times'));\n    }\n    return JSON.parse(window.localStorage.getItem('user-solve-times'));\n  };\n\n  const addNewTimeToTimesArray = (string) => {\n    var timesArrayCopy = timesArray.slice();\n    timesArrayCopy.push(string);\n    window.localStorage.setItem('user-solve-times', JSON.stringify(timesArrayCopy));\n    return timesArrayCopy;\n  }\n\n  const removeTimeFromTimeArray = (time) => {\n    var timesArrayCopy = timesArray.slice();\n    var indexToRemove = timesArrayCopy.indexOf(time);\n    timesArrayCopy.splice(indexToRemove, 1);\n    window.localStorage.setItem('user-solve-times', JSON.stringify(timesArrayCopy));\n    return timesArrayCopy;\n  }\n\n  const clearAllTimes = () => {\n    setTimesArray([]); \n    window.localStorage.setItem('user-solve-times', JSON.stringify([]));\n  }\n\n  const switchInspection = () => {\n    if(inspection) {\n      setInspection(false);\n    } else {\n      setInspection(true);\n    }\n  }\n\n\n\n  useEffect(() => {\n    setTimesArray(returnDataObjectIfExistsOrCreateDataObjectIfNot());\n  }, [])\n\n  return (\n    <div className=\"App\">\n\n      <header>\n        <h1 className='title' >Rubik's Cube Timer</h1>\n        \n        \n      </header>\n\n      <div className=\"twoColumns\">\n        <div className='leftColumn' >\n          <Scrambler />\n          \n          <Timer\n            updateTimesArray={(string) => setTimesArray(addNewTimeToTimesArray(string))}\n            inspection={inspection}\n            inspectionDuration={inspectionDuration}\n          />\n        </div>\n        <div className='timesAndSettings'>\n          <TimesTable\n            timesArray={timesArray}\n            removeTime={(time) => setTimesArray(removeTimeFromTimeArray(time))}\n            clearAllTimes={() => clearAllTimes()}\n          />\n          <div className=\"settings\">\n            <div className='inspectionSwitch'>\n              <label htmlFor=\"checkbox\">Inspection On/Off</label>\n              <input\n                type=\"checkbox\"\n                name='checkbox'\n                onClick={() => {switchInspection()}}\n                defaultChecked={inspection}\n              />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                name='duration'\n                value={\n                  inspectionDuration === 0 ? '' : inspectionDuration\n                }\n                onChange={(event) => setInspectionDuration(event.target.value)}\n                placeholder={\n                  inspection ? \"Time in seconds\" : \"Inspection is off\"\n                }\n                disabled={!inspection}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <footer>\n        <p className='footerItem'>Made by Derek Price</p>\n        <a className='footerItem' href=\"https://github.com/DerekPixel/rubiks-cube-timer\">GitHub</a>\n      </footer>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}